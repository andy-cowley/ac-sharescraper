# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:3.6.1
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
      - checkout

      - setup_remote_docker:
          docker_layer_caching: true

      - run:
          name: Create API Docker Image
          command: |
            export TAG=1.1.${CIRCLE_BUILD_NUM}
            export IMAGE_NAME=sharescraper-api
            docker build -t andycowley/$IMAGE_NAME:$TAG ./api
            docker login -u $DOCKER_USER -p $DOCKER_PWD
            docker push andycowley/$IMAGE_NAME:$TAG
      - run:
          name: Create UI Docker Image
          command: |
            export TAG=1.1.${CIRCLE_BUILD_NUM}
            export IMAGE_NAME=sharescraper-ui
            docker build -t andycowley/$IMAGE_NAME:$TAG ./api
            docker login -u $DOCKER_USER -p $DOCKER_PWD
            docker push andycowley/$IMAGE_NAME:$TAG
  deploy:
    docker:
      - image: andycowley/k8s-utils:0.1.0
    steps:
      - checkout 

      - run:
          name: Sub tokens in yaml and push to K8s 
          command: |
            sed -i -e "s/VERSION/1.1.${CIRCLE_BUILD_NUM}/g" ./k8s/sharescraper.yaml
            kubectl apply -f ./k8s/sharescraper.yaml
            kubectl rollout status deploy sharescraper-api
        
workflows:
  version: 2
  workflow:
    jobs:
    - build
    - deploy