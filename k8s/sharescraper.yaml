apiVersion: v1
kind: PersistentVolumeClaim
metadata:
    name: mongo-disk
spec:
    accessModes:
    - ReadWriteOnce
    resources:
        requests:
            storage: 3Gi

---

apiVersion: extensions/v1beta1
kind: Deployment
metadata: 
  name: mongo
  labels:
    app: ac-sharescraper
    module: mongo
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: ac-sharescraper
        module: mongo
    spec:
      containers:
      - name: mongo
        image: mongo
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 27017
        volumeMounts:
        - name: mongo-persistent-storage
          mountPath: /data/db
      volumes:
      - name: mongo-persistent-storage
        persistentVolumeClaim:
          claimName: mongo-disk


---

apiVersion: extensions/v1beta1
kind: Deployment
metadata: 
  name: sharescraper-api
  labels:
    app: ac-sharescraper
    module: api
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: ac-sharescraper
        module: api
    spec:
      containers:
      - name: sharescraper-api
        image: andycowley/sharescraper-api:VERSION
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5000
        env:
        -   name: MONGO
            value: mongo

---

apiVersion: extensions/v1beta1
kind: Deployment
metadata: 
  name: sharescraper-ui
  labels:
    app: ac-sharescraper
    module: ui
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: ac-sharescraper
        module: ui
    spec:
      containers:
      - name: sharescraper-ui
        image: andycowley/sharescraper-ui:VERSION
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        env:
        -   name: API
            value: "http://api:5000"

---

apiVersion: v1
kind: Service
metadata:
  name: ui
spec:
  ports:
  - port: 8080
    targetPort: 8080
  type: NodePort
  selector:
    app: ac-sharescraper
    module: ui

---

apiVersion: certmanager.k8s.io/v1alpha1
kind: Certificate
metadata:
  name: sharescraper
  namespace: default
spec:
  secretName: sharescraper
  issuerRef:
    name: letsencrypt-prod
    kind: ClusterIssuer
  commonName: sharescraper.andycowley.uk
  dnsNames:
  - sharescraper.andycowley.uk
  acme:
    config:
    - dns01:
        provider: clouddns
      domains:
      - sharescraper.andycowley.uk

---

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: ui
  labels:
    app: ac-sharescraper
    module: ui
  annotations:
    ingress.kubernetes.io/ssl-redirect: "true"
    kubernetes.io/tls-acme: "true"  
    certmanager.k8s.io/issuer: letsencrypt-prod
    kubernetes.io/ingress.class: "nginx"  
spec:
  tls:
  - secretName: sharescraper
    hosts:
    - sharescraper.andycowley.uk
  rules:
  - host: sharescraper.andycowley.uk
    http:
      paths:
      - path: /
        backend:
          serviceName: ui
          servicePort: 8080
---
# Headless Service mongo
apiVersion: v1
kind: Service
metadata:
  name: mongo
spec:
  ports:
  - port: 27017
    name: mongo
  clusterIP: None
  selector:
    app: ac-sharescraper
    module: mongo

---
# Headless Service api
apiVersion: v1
kind: Service
metadata:
  name: api
spec:
  ports:
  - port: 5000
    name: api
  clusterIP: None
  selector:
    app: ac-sharescraper
    module: api

--- 

apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: scraper-job
spec:
  schedule: "0 10,17 * * *"
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: scraper-job
            image: byrnedo/alpine-curl
            args:
            - http://api:5000/api/refresh-db
          restartPolicy: OnFailure